
apply plugin: 'com.android.application'

apply plugin: 'moongradleplugin'

apply plugin : 'gradleplugin_eventtracking'

//apply plugin: 'com.llew.bytecode.fix'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.moonljt521.gradleplugindemo"
        minSdkVersion 25
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    gradle.startParameter.getTaskNames().each { task ->
        //library里 BuildConfig.DEBUG默认一直是flase;所以需要自定义
        if(task.equals("assembleDebug")){

            println ">>> "+task

            aaptOptions.cruncherEnabled = false

            project.gradle.startParameter.excludedTaskNames.add('lint')

        }else if(task.equals("assembleRelease")){
            println "<<<<<<<<"+task

            aaptOptions.cruncherEnabled = true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //

}

gradle.startParameter.getTaskNames().each { task ->
    //library里 BuildConfig.DEBUG默认一直是flase;所以需要自定义

    println "当前执行的 task --> " + task

    if(task.equals("assembleDebug")){
        aaptOptions.cruncherEnabled = false
        project.gradle.startParameter.excludedTaskNames.add('lint');

    }else if(task.equals("assembleRelease")){
        aaptOptions.cruncherEnabled = true
    }
}




task aCopyFile (){

    copy {
        from  '/Users/moon/Documents/plugin/'
        into  '/Users/moon/Documents/aa'
    }
}

task aDelTask(){

    File file = new File('/Users/moon/Documents/aa')
    file.deleteDir()

//    delete {
//        delete '/Users/moon/Documents/aa'
//        include '*.txt'
//    }

}


//bytecodeFixConfig {
//
//    enable true
//
//    logEnable = true
//
//    keepFixedJarFile = true
//
//    keepFixedClassFile = true
//
//    dependencies = []
//
//    fixConfig = [
//            'com.tencent.av.sdk.NetworkHelp##getAPInfo(android.content.Context)##$1 = null;System.out.println("I have hooked this method by BytecodeFixer !!!");##0',
//            'com.tencent.av.sdk.NetworkHelp##getMobileAPInfo(android.content.Context,int)##$1 = null;System.out.println("I have hooked this method by BytecodeFixer !!!");return new com.tencent.av.sdk.NetworkHelp.APInfo();##-1',
//    ]
//}
